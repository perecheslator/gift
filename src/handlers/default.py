from aiogram import Router, F
from aiogram.types import Message 
from aiogram.filters import CommandStart

from src.gifts import parse_members

from config import ADMINS
from src.gifts import db


router = Router()
IS_ACTIVE = False


@router.message(CommandStart())
async def start_handler(message: Message):
    await message.answer(
        text='<b>‚ö°Ô∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ —á–∞—Ç—ã —Å–ø–∏—Å–∫–æ–º –∏ –ø–∞—Ä—Å–∏–Ω–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞—á–Ω–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏</b>\n\n<i>–°–æ–≤–µ—Ç—É–µ–º —Å–∫–∏–¥—ã–≤–∞—Ç—å –¥–æ 4 —á–∞—Ç–æ–≤ –≥–¥–µ –º–µ–Ω—å—à–µ 5 —Ç—ã—Å. –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤</i>\n<b>–ü–∞—Ä—Å–∏–Ω–≥ –æ—Ç–º–µ–Ω–∏—Ç—å –Ω–µ–ª—å–∑—è!</b>'
    )


@router.message(F.from_user.id.in_(ADMINS))
async def chats_handler(message: Message):
    global IS_ACTIVE 

    if IS_ACTIVE:
        return await message.answer('<b>‚ùå –î–æ–∂–¥–∏—Ç–µ—Å—å –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞</b>')

    IS_ACTIVE = True
    
    chats = message.text.split('\n')
    for index, chat in enumerate(chats):
        chats[index] = chat.replace('https://', '').replace('t.me/', '').replace('@', '')

    result_message = await message.answer(f'<b>üìë –ù–∞—á–∞–ª–∏ –ø–∞—Ä—Å–∏–Ω–≥ {len(chats)} —á–∞—Ç–æ–≤.</b>')

    for chat in chats:
        async for result_gift in parse_members(chat):
            result_text = f'<b>üåü –ß–∞—Ç: @{chat} | –Æ–∑–µ—Ä: @{result_gift[0]["username"]} [id: {result_gift[0]["user_id"]}]</b>\n\n'
            gifts_text = ""

            for index, item in enumerate(result_gift):
                gift_line = f'<b><i>{db.check_gift(int(item["gift"]))}</i> Gift: {item["gift"]}</b>\n'
                
                if len(result_text + gifts_text + gift_line) <= 4096: # max telegram message size 
                    gifts_text += gift_line
                else:
                    break 
                    
            await result_message.reply(result_text + gifts_text)

    await result_message.reply(f'<b>‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ –æ–∫–æ–Ω—á–µ–Ω</b>')
    IS_ACTIVE = False